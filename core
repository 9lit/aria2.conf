#!/bin/bash

CONF="${1}/perform_config.json"


function GetConfig(){ local node=$1; cat "$CONF" | jq -r ".$node"
}
LOG_FILE="$(GetConfig other.log_file)"
RCLONE_CONFIG="$(GetConfig rclone.config)"

# 打印日志
function LOG() {
    local content=$1 title=$2 logdate && logdate=$(date "+%Y-%m-%d %H:%M:%S")
    echo -e "\e[32m${logdate}\e[0m>>> ${title} ${content}" | tee -a "$LOG_FILE"
}

# 上传文件至 rclone
function UPLOAD() {
    local mode=$1 source=$2 target=$3
    local status
    rclone -vP $mode "$source" "$target" --log-file="$LOG_FILE" --config="$RCLONE_CONFIG"

    status=$(rclone ls "$target")
    if [ "$status" =~ "directory not found"]; then return 1; else return 0; fi
}

# 对字符串进行 16 进制编码
function URLENCODE() {
  local length="${#1}"
  for (( i = 0; i < length; i++ )); do
    local c="${1:i:1}" # 从左边第 i 个位置开始, 截取一个字符
    case $c in # 排除 字母 数字 和部分特殊字符
      [a-zA-Z0-9.~_-//:]) printf "$c" ;;
    *) printf "$c" | xxd -p -c1 | while read x;do printf "%%%s" "$x";done
  esac
done
}


# cat $cba_ini | # 打印文件
#   grep "\\[taks.*\\]" | # 匹配 前缀为 taks的名称
#   grep -oP "[a-z]*\d+" # 去掉方括号
#   sort -r | # 按照 降序排序
#   awk "{print $1}" | 
#   head -1  # 获取第一行的字符串, 并进行打印